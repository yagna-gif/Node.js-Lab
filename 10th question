10)	Design a controller with Servlet that provides the interaction with web application

WebApp/
├── index.html (login form)
├── WEB-INF/
│   └── web.xml
└── LoginController.java (Servlet)

 Step 1: index.html – The Login Form
<!DOCTYPE html>
<html>
<head><title>Login</title></head>
<body>
  <h2>Login</h2>
  <form method="post" action="login">
    Username: <input type="text" name="username"><br><br>
    Password: <input type="password" name="password"><br><br>
    <input type="submit" value="Login">
  </form>
</body>
</html>

Step 2: LoginController.java – The Servlet
import java.io.*;
import javax.servlet.*;
import javax.servlet.http.*;

public class LoginController extends HttpServlet {
    protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
        // 1. Get form data
        String username = request.getParameter("username");
        String password = request.getParameter("password");

        // 2. Simple validation (You can add DB/auth logic here)
        if ("admin".equals(username) && "admin123".equals(password)) {
            // 3. Success - redirect to welcome page or dashboard
            response.sendRedirect("welcome.html");
        } else {
            // 4. Failure - show error
            PrintWriter out = response.getWriter();
            response.setContentType("text/html");
            out.println("<html><body>");
            out.println("<h3>Invalid username or password!</h3>");
            out.println("<a href='index.html'>Try Again</a>");
            out.println("</body></html>");
        }
    }
}

Step 3: web.xml – Servlet Mapping
<web-app xmlns="http://jakarta.ee/xml/ns/jakartaee"
         version="5.0">

  <servlet>
    <servlet-name>LoginController</servlet-name>
    <servlet-class>LoginController</servlet-class>
  </servlet>

  <servlet-mapping>
    <servlet-name>LoginController</servlet-name>
    <url-pattern>/login</url-pattern>
  </servlet-mapping>

</web-app>
